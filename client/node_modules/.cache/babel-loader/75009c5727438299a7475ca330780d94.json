{"ast":null,"code":"var _jsxFileName = \"/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { useMiddleware } from 'react-redux';\nimport { createStore } from 'redux'; //import {thunk} from 'redux-thunk';\n//import App\n\nimport App from './components/App';\nimport reducers from './reducers'; //the index.js in reducers which combines all our reducers to make global state\n//create reduxstore with our reducers [combined reducers]\n\nconst store = createStore(reducers, useMiddleware()); //attach the react in a whole to the html\n\nReactDOM.render(\n/*#__PURE__*/\n//wrap the whole app in our provider to provide redux state to the app! give the store the created store [our app now will officially have a global store of state in which we can access via connect middle man in any component and actions/reducers]\nReact.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n})), document.getElementById('root'));\n/**\n * clientID: 106342742873-ntgcr1aoiros0i86ddb7uk5cvn5t1fi2.apps.googleusercontent.com\n */","map":{"version":3,"sources":["/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/index.js"],"names":["React","ReactDOM","Provider","useMiddleware","createStore","App","reducers","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAAQC,aAAR,QAA4B,aAA5B;AACA,SAAQC,WAAR,QAA0B,OAA1B,C,CACA;AAEA;;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAAmC;AAEnC;;AACA,MAAMC,KAAK,GAAGH,WAAW,CAAEE,QAAF,EAAYH,aAAa,EAAzB,CAAzB,C,CAEA;;AACAF,QAAQ,CAACO,MAAT;AAAA;AACE;AACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFF,EAKEE,QAAQ,CAACC,cAAT,CAAyB,MAAzB,CALF;AAQA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {useMiddleware} from 'react-redux';\nimport {createStore} from 'redux';\n//import {thunk} from 'redux-thunk';\n\n//import App\nimport App from './components/App';\nimport reducers from './reducers'; //the index.js in reducers which combines all our reducers to make global state\n\n//create reduxstore with our reducers [combined reducers]\nconst store = createStore (reducers, useMiddleware ());\n\n//attach the react in a whole to the html\nReactDOM.render (\n  //wrap the whole app in our provider to provide redux state to the app! give the store the created store [our app now will officially have a global store of state in which we can access via connect middle man in any component and actions/reducers]\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById ('root')\n);\n\n/**\n * clientID: 106342742873-ntgcr1aoiros0i86ddb7uk5cvn5t1fi2.apps.googleusercontent.com\n */\n"]},"metadata":{},"sourceType":"module"}