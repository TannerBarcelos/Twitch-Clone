{"ast":null,"code":"var _jsxFileName = \"/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\n\nclass GoogleAuth extends Component {\n  constructor(props) {\n    super(props);\n  } //load the OATH system from google -> use did mount lifecycle method for requests that should happen immediately on load\n\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      //this is async: returns a promise -> this is where we will initiate the nww auth instance to sign the user in\n      window.gapi.client.init({\n        clientId: '106342742873-ntgcr1aoiros0i86ddb7uk5cvn5t1fi2.apps.googleusercontent.com',\n        scope: 'email' //the list of scopes [methods of authorization]\n\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n      });\n    });\n    /*load up the oath library from googles API -> see video 217-218 in react course [docs: https://developers.google.com/identity/sign-in/web/reference#authentication]\n    see these docs to see how to initiate an authentication system for the app\n    */\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 12\n      }\n    }, \"Hello\");\n  }\n\n}\n\nexport default GoogleAuth;","map":{"version":3,"sources":["/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/components/GoogleAuth.js"],"names":["React","Component","GoogleAuth","constructor","props","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth","auth2","getAuthInstance","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AACjCE,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAOA,KAAP;AACD,GAHgC,CAKjC;;;AACAC,EAAAA,iBAAiB,GAAI;AACnBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAkB,cAAlB,EAAkC,MAAM;AACtC;AACAF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CACGC,IADH,CACS;AACLC,QAAAA,QAAQ,EAAE,0EADL;AAELC,QAAAA,KAAK,EAAE,OAFF,CAEW;;AAFX,OADT,EAKGC,IALH,CAKS,MAAM;AACX,aAAKC,IAAL,GAAYR,MAAM,CAACC,IAAP,CAAYQ,KAAZ,CAAkBC,eAAlB,EAAZ;AACD,OAPH;AAQD,KAVD;AAWA;;;AAGD;;AAEDC,EAAAA,MAAM,GAAI;AACR,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACD;;AAzBgC;;AA4BnC,eAAef,UAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass GoogleAuth extends Component {\n  constructor (props) {\n    super (props);\n  }\n\n  //load the OATH system from google -> use did mount lifecycle method for requests that should happen immediately on load\n  componentDidMount () {\n    window.gapi.load ('client:auth2', () => {\n      //this is async: returns a promise -> this is where we will initiate the nww auth instance to sign the user in\n      window.gapi.client\n        .init ({\n          clientId: '106342742873-ntgcr1aoiros0i86ddb7uk5cvn5t1fi2.apps.googleusercontent.com',\n          scope: 'email', //the list of scopes [methods of authorization]\n        })\n        .then (() => {\n          this.auth = window.gapi.auth2.getAuthInstance ();\n        });\n    });\n    /*load up the oath library from googles API -> see video 217-218 in react course [docs: https://developers.google.com/identity/sign-in/web/reference#authentication]\n    see these docs to see how to initiate an authentication system for the app\n    */\n  }\n\n  render () {\n    return <div>Hello</div>;\n  }\n}\n\nexport default GoogleAuth;\n"]},"metadata":{},"sourceType":"module"}