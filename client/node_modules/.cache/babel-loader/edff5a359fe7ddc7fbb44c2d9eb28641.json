{"ast":null,"code":"//using our string contants for types in another file to safeguard from typos: see video 229 in react course\nimport { SIGN_IN, SIGN_OUT } from '../actions/types'; //we can assign initial root level state like this: good for shopping carts, todo app, etc for an initial list to 0\n\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null\n}; //remember default argument of state to empty, etc. depending on the data type and strucuture we want unless we want to make some initial state\n//and oass that in as the state param for this reducer for some state\n\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //return the state with is signed in changing to true to signify to the app we are signed in\n    case SIGN_IN:\n      return { ...state,\n        isSignedIn: true,\n        userId: action.payload\n      };\n    //vice-versa for sign out\n\n    case SIGN_OUT:\n      return { ...state,\n        isSignedIn: false\n      };\n    //and of course as we know, default returns of non-met cases in reducers is always the state itself\n\n    default:\n      return state;\n  }\n}); //default exports do not use destrucuturing: simply name the reference and use it","map":{"version":3,"sources":["/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/reducers/authReducer.js"],"names":["SIGN_IN","SIGN_OUT","INITIAL_STATE","isSignedIn","userId","state","action","type","payload"],"mappings":"AAAA;AACA,SAAQA,OAAR,EAAiBC,QAAjB,QAAgC,kBAAhC,C,CAEA;;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,IADQ;AAEpBC,EAAAA,MAAM,EAAE;AAFY,CAAtB,C,CAKA;AACA;;AACA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAKP,OAAL;AACE,aAAO,EAAC,GAAGK,KAAJ;AAAWF,QAAAA,UAAU,EAAE,IAAvB;AAA6BC,QAAAA,MAAM,EAAEE,MAAM,CAACE;AAA5C,OAAP;AACF;;AACA,SAAKP,QAAL;AACE,aAAO,EAAC,GAAGI,KAAJ;AAAWF,QAAAA,UAAU,EAAE;AAAvB,OAAP;AACF;;AACA;AACE,aAAOE,KAAP;AATJ;AAWD,CAZD,E,CAcA","sourcesContent":["//using our string contants for types in another file to safeguard from typos: see video 229 in react course\nimport {SIGN_IN, SIGN_OUT} from '../actions/types';\n\n//we can assign initial root level state like this: good for shopping carts, todo app, etc for an initial list to 0\nconst INITIAL_STATE = {\n  isSignedIn: null,\n  userId: null,\n};\n\n//remember default argument of state to empty, etc. depending on the data type and strucuture we want unless we want to make some initial state\n//and oass that in as the state param for this reducer for some state\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    //return the state with is signed in changing to true to signify to the app we are signed in\n    case SIGN_IN:\n      return {...state, isSignedIn: true, userId: action.payload};\n    //vice-versa for sign out\n    case SIGN_OUT:\n      return {...state, isSignedIn: false};\n    //and of course as we know, default returns of non-met cases in reducers is always the state itself\n    default:\n      return state;\n  }\n};\n\n//default exports do not use destrucuturing: simply name the reference and use it\n"]},"metadata":{},"sourceType":"module"}