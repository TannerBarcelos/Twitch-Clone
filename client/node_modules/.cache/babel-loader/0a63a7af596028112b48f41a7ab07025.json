{"ast":null,"code":"import { combineReducers } from 'redux'; //reducer imports for store\n\nimport authReducer from './authReducer'; //reducer alias will be the key of the global store to reference when mapping state to props -> so i every component, when mapping state to props,\n//we can use the state object in the params of mapState.. to access the key of the specific reducer we want to use and extract state to props\n//REMEMBER: TO CHANGE STATE, WE NEED TO USE A DISPATCHER TO DO THAT! THAT IS THE SECOND PARAM OF COONECT() WHICH DISPATCHES ALL NEEEDED ACTION CREATORS WE WANT TO USE\n//IN ANY COMPONENT, TO OUR STORE [WHICH IS ALL COMBINED WITH COMBINE REDUCER HERE BUT GETS SHOVED TO ALL REDUCERS]\n\nexport default combineReducers({\n  auth: authReducer\n});","map":{"version":3,"sources":["/Users/tannerbarcelos/OneDrive/DEV/Projects/StreamClone/client/src/reducers/index.js"],"names":["combineReducers","authReducer","auth"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,OAA9B,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;AACA;AACA;;AACA,eAAeD,eAAe,CAAE;AAC9BE,EAAAA,IAAI,EAAED;AADwB,CAAF,CAA9B","sourcesContent":["import {combineReducers} from 'redux';\n\n//reducer imports for store\nimport authReducer from './authReducer';\n\n//reducer alias will be the key of the global store to reference when mapping state to props -> so i every component, when mapping state to props,\n//we can use the state object in the params of mapState.. to access the key of the specific reducer we want to use and extract state to props\n//REMEMBER: TO CHANGE STATE, WE NEED TO USE A DISPATCHER TO DO THAT! THAT IS THE SECOND PARAM OF COONECT() WHICH DISPATCHES ALL NEEEDED ACTION CREATORS WE WANT TO USE\n//IN ANY COMPONENT, TO OUR STORE [WHICH IS ALL COMBINED WITH COMBINE REDUCER HERE BUT GETS SHOVED TO ALL REDUCERS]\nexport default combineReducers ({\n  auth: authReducer,\n});\n"]},"metadata":{},"sourceType":"module"}